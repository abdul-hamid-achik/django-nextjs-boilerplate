version: '3'

tasks:
  docker.start:
    desc: Starts Docker engine locally
    cmds:
      - open -a Docker

  ci.push:
    desc: Runs github actions locally as if it was pushed to the repo
    cmds:
      - act push

  ci.pr:
    desc: Runs github actions locally as if it was a pull request
    cmds:
      - act pull_request

  compose.up:
    desc: Starts all services in docker-compose.yml
    cmds:
      - docker compose up -d

  compose.dev:
    desc: runs database for development
    cmds:
      - docker compose up -d database

  compose.down:
    desc: Stops all services in docker-compose.yml
    cmds:
      - docker compose down

  compose.build:
    desc: Builds all services in docker-compose.yml
    cmds:
      - docker compose build

  compose.logs:
    desc: Shows logs for all services in docker-compose.yml
    cmds:
      - docker compose logs -f backend frontend

  logs:
    desc: Shows logs for all services in docker-compose.yml
    cmds:
      - task: compose.logs

  start:
    desc: Starts all services in docker-compose.yml
    summary: |
        Starts all services in docker-compose.yml, including backend and frontend.
        This is the same as running `docker compose up -d`
    deps: [ compose.build, compose.up ]
    cmds:
      - task: logs

  dev:
    desc: Starts database in docker-compose.yml
    deps: [ compose.build, compose.dev ]
    cmds:
      - task: logs

  reset:
    desc: Resets all services in docker-compose.yml
    deps: [ compose.down, compose.build, compose.up ]
    cmds:
      - task: logs

  default:
    desc: Starts all services in docker-compose.yml and prints logs, ideal for local development
    deps: [ dev ]

  clear:
    desc: Clears all containers and images
    cmds:
      - task: compose.down
      - docker system prune -af --volumes

  seed:
    desc: Seeds the database
    dir: backend
    cmds:
      - docker compose run backend python manage.py createsuperuser --username=admin --email=admin@example.com --noinput
      - docker compose run backend python manage.py changepassword admin

  migrate:
    desc: Runs migrations
    dir: backend
    cmds:
      - docker compose run backend python manage.py migrate

  test:
        desc: Runs tests
        cmds:
            - cd backend && pdm test
            - cd frontend && npm test